data = {
    0x00: 0xdda85,
    0x01: 0xdda8d,
    0x02: 0xdda95,
    0x03: 0xdda9d,
    0x04: 0xddaa5,
    0x05: 0xddaad,
    0x06: 0xddab5,
    0x07: 0xddabd,
    0x08: 0xddac5,
    0x09: 0xddacd,
    0x0a: 0xddad5,
    0x0b: 0xddadd,
    0x0c: 0xddae5,
    0x0d: 0xddaed,
    0x0e: 0xddaf5,
    0x0f: 0xddafd,
    0x10: 0xddb05,
    0x6c: 0xddb0d,
    0x6d: 0xddb15,
    0x6f: 0xddb1d,
    0xc6: 0xddb25,
    0x11: 0xddb2f,
    0x12: 0xddb37,
    0x13: 0xddb3f,
    0x14: 0xddb47,
    0x15: 0xddb4f,
    0x16: 0xddb57,
    0x17: 0xddb5f,
    0x18: 0xddb67,
    0x19: 0xddb6f,
    0x1a: 0xddb77,
    0x1b: 0xddb7f,
    0x1c: 0xddb87,
    0x1d: 0xddb8f,
    0x1e: 0xddb97,
    0x1f: 0xddb9f,
    0x20: 0xddba7,
    0x21: 0xddbaf,
    0x22: 0xddbb7,
    0x23: 0xddbbf,
    0x24: 0xddbc7,
    0x25: 0xddbcf,
    0x26: 0xddbd7,
    0x27: 0xddbdf,
    0x28: 0xddbe7,
    0x29: 0xddbef,
    0x2a: 0xddbf7,
    0x2b: 0xddbff,
    0x2c: 0xddc07,
    0x2d: 0xddc11,
    0x2e: 0xddc19,
    0x2f: 0xddc21,
    0x30: 0xddc29,
    0x31: 0xddc31,
    0x32: 0xddc39,
    0x33: 0xddc41,
    0x34: 0xddc49,
    0x35: 0xddc51,
    0x36: 0xddc59,
    0x37: 0xddc61,
    0x38: 0xddc69,
    0x39: 0xddc71,
    0x3a: 0xddc79,
    0x3b: 0xddc81,
    0x3c: 0xddc89,
    0x3d: 0xddc91,
    0x3e: 0xddc99,
    0x3f: 0xddca1,
    0x40: 0xddca9,
    0x41: 0xddcb1,
    0x42: 0xddcb9,
    0x6e: 0xddcc1,
    0x43: 0xddccb,
    0x44: 0xddcd3,
    0x45: 0xddcdb,
    0x46: 0xddce3,
    0x47: 0xddceb,
    0x48: 0xddcf3,
    0x49: 0xddcfb,
    0x4a: 0xddd03,
    0x4b: 0xddd0b,
    0x4c: 0xddd13,
    0x4d: 0xddd1b,
    0x4e: 0xddd23,
    0x4f: 0xddd2b,
    0x50: 0xddd33,
    0x51: 0xddd3b,
    0x52: 0xddd43,
    0x53: 0xddd4b,
    0x54: 0xddd53,
    0x55: 0xddd5b,
    0x56: 0xddd63,
    0x57: 0xddd6b,
    0x58: 0xddd73,
    0x59: 0xddd7b,
    0x81: 0xddd83,
    0x5a: 0xddd8d,
    0x5b: 0xddd95,
    0x5c: 0xddd9d,
    0x5d: 0xddda5,
    0x5e: 0xdddad,
    0x5f: 0xdddb5,
    0x60: 0xdddbd,
    0x61: 0xdddc5,
    0x62: 0xdddcd,
    0x63: 0xdddd5,
    0x64: 0xddddd,
    0x65: 0xddde5,
    0x66: 0xddded,
    0x67: 0xdddf5,
    0x68: 0xdddfd,
    0x6b: 0xdde05,
    0x70: 0xdde0f,
    0x71: 0xdde17,
    0x72: 0xdde1f,
    0x73: 0xdde27,
    0x74: 0xdde2f,
    0x75: 0xdde37,
    0x76: 0xdde3f,
    0x77: 0xdde47,
    0x78: 0xdde51,
    0x79: 0xdde59,
    0x7a: 0xdde61,
    0x7b: 0xdde69,
    0x7c: 0xdde71,
    0x7d: 0xdde79,
    0x7e: 0xdde81,
    0x7f: 0xdde89,
    0x80: 0xdde91,
    0x69: 0xdde9b,
    0x6a: 0xddea3,
}
"""
https://github.com/amoebaOfDoom/subversion/blob/1b39167be1f0328388ab4e23f5a5f4d4b15e4fd2/Project/ASM/MapColors.asm#L1405

 - 2 byte - loc id ("plmparamlo")
 - 1 byte - X coord
 - 1 byte - Y coord
 - 2 byte - un-fallen loc id (0 for normal)
 - 2 byte - major 1 minor 0
"""


def get_this_data_from_rom() -> None:
    from subversion_rando.romWriter import RomWriter

    # https://github.com/amoebaOfDoom/subversion/blob/master/Project/ASM/MapColors.asm#L1405

    rw = RomWriter.fromFilePaths("roms/Subversion12.sfc")
    cursor = 0xdda85  # 1st entry
    areas_done = 0
    while areas_done < 8:
        loc_id = rw.rom_data[cursor]
        print(f"    0x{loc_id:02x}: {hex(cursor)},")
        cursor += 8
        if rw.rom_data[cursor] == 0xff:
            areas_done += 1
            cursor += 2


if __name__ == "__main__":
    get_this_data_from_rom()
